{
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "parserOptions": {
    "ecmaVersion": 2020, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true // Allows for the parsing of JSX
    },
    "project": [
      "./tsconfig.json"
    ]
  },
  "settings": {
    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    }
  },
  "env": {
    "browser": true,
    "es6": true,
    "jest": true
  },
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "testing-library" // Uses the recommended rules from @testing-library/eslint-plugin
  ],
  "extends": [
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "prettier",
    "airbnb-typescript/base",
    "airbnb/hooks",
    "airbnb",
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "rules": {
    "no-throw-literal": "off",
    "@typescript-eslint/no-throw-literal": "off",
    "react/no-array-index-key": "warn",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "object-curly-newline": "off", // this rule conflicts with prettier style
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true
      }
    ],
    "no-shadow": "off", // disable the base rule as it can report incorrect errors
    "camelcase": "off", // API responses are often snake_case
    "consistent-return": "off", // this rule blocks early returns
    "@typescript-eslint/indent": "off", // conflicts with prettier ruling
    "@typescript-eslint/no-floating-promises": "off", // forces promises to be handed at useEffect
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "no-plusplus": "off", // overreach rule
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "no-use-before-define": "off",
    "no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_" // prefix unused args as _foo
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "modifiers": [
          "destructured"
        ],
        "format": null
      }
    ],
    "arrow-parens": "off", // this rule conflicts with prettier style
    "import/prefer-default-export": "off",
    "react/require-default-props": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".tsx",
          ".ts"
        ]
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ]
  },
  "globals": {
    "React": "writable",
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "overrides": [
    {
      "files": [
        "**/*.stories.*"
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/jsx-props-no-spreading": "off"
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "no-undef": "off" // issue: JSX undefined | propose: https://stackoverflow.com/a/64197516/9238134
      }
    },
    {
      // enable eslint-plugin-testing-library rules or preset only for matching files
      "files": [
        "**/__tests__/**/*.[jt]s?(x)",
        "**/?(*.)+(spec|test).[jt]s?(x)"
      ],
      "extends": [
        "plugin:testing-library/react"
      ]
    },
  ]
}
